/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_clock.h"
#include "fsl_ftm.h"
#include "fsl_lpi2c.h"
#include "fsl_lpspi.h"
#include "fsl_lpuart.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Definition of peripheral ID */
#define FTM0_PERIPHERAL FTM0
/* Definition of the clock source frequency */
#define FTM0_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_CoreSysClk)
/* Definition of the clock source frequency */
#define FTM0_TIMER_MODULO_VALUE (((FTM0_CLOCK_SOURCE/ (1U << (FTM0_PERIPHERAL->SC & FTM_SC_PS_MASK))) / 50) - 1)
/* BOARD_InitPeripherals defines for LPI2C0 */
/* Definition of peripheral ID */
#define LPI2C0_PERIPHERAL LPI2C0
/* Definition of clock source */
#define LPI2C0_CLOCK_FREQ CLOCK_GetIpFreq(kCLOCK_Lpi2c0)
/* Definition of slave address */
#define LPI2C0_MASTER_SLAVE_ADDRESS 0
/* BOARD_InitPeripherals defines for LPSPI0 */
/* Definition of peripheral ID */
#define LPSPI0_PERIPHERAL LPSPI0
/* Definition of clock source */
#define LPSPI0_CLOCK_FREQ CLOCK_GetIpFreq(kCLOCK_Lpspi0)
/* Definition of peripheral ID */
#define LPUART2_PERIPHERAL LPUART2
/* Definition of the clock source frequency */
#define LPUART2_CLOCK_SOURCE 8000000UL
/* Rx transfer buffer size. */
#define LPUART2_RX_BUFFER_SIZE 10
/* Rx transfer buffer size. */
#define LPUART2_TX_BUFFER_SIZE 10
/* LPUART2 interrupt vector ID (number). */
#define LPUART2_IRQN LPUART2_IRQn
/* Definition of peripheral ID */
#define FTM1_PERIPHERAL FTM1
/* Definition of the clock source frequency */
#define FTM1_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_CoreSysClk)
/* Definition of the clock source frequency */
#define FTM1_TIMER_MODULO_VALUE (((FTM1_CLOCK_SOURCE/ (1U << (FTM1_PERIPHERAL->SC & FTM_SC_PS_MASK))) / 250) - 1)
/* Definition of peripheral ID */
#define LPUART0_PERIPHERAL LPUART0
/* Definition of the clock source frequency */
#define LPUART0_CLOCK_SOURCE 8000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const ftm_config_t FTM0_config;
extern const lpi2c_master_config_t LPI2C0_masterConfig;
extern const lpspi_master_config_t LPSPI0_config;
extern const lpuart_config_t LPUART2_config;
extern lpuart_handle_t LPUART2_handle;
extern uint8_t LPUART2_rxBuffer[LPUART2_RX_BUFFER_SIZE];
extern lpuart_transfer_t LPUART2_rxTransfer;
extern uint8_t LPUART2_txBuffer[LPUART2_TX_BUFFER_SIZE];
extern lpuart_transfer_t LPUART2_txTransfer;
extern const ftm_config_t FTM1_config;
extern const lpuart_config_t LPUART0_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
